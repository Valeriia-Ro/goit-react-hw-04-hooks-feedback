{"version":3,"sources":["components/Section.js","components/FeedbackOption.js","components/Statistics.js","components/Notification.js","components/Container.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","style","marginRight","type","onClick","e","name","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","FeedbackOption","console","log","target","state","Object","keys","Number","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAceA,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,MCyBUC,EA3BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACE,8BACGG,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,MAAO,CACLC,YAAa,OAGfC,KAAK,SACLC,QAAS,SAACC,GACRP,EAAgBO,IAElBC,KAAMN,EATR,SAWGA,GAPIA,WCUAO,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,eAAC,EAAD,CAASlB,MAAM,aAAf,UACE,uCAAUc,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,YCNWC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCE3BC,EAFG,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAH,OAAkB,8BAAMA,KCK3B,SAASqB,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAsBMC,EAAqB,WACzB,OAAOb,EAAOC,EAAUC,GAO1B,OACE,eAAC,EAAD,WACE,cAACY,EAAD,CACExB,gBA/BoB,SAACO,GACzBkB,QAAQC,IAAInB,GACZkB,QAAQC,IAAInB,EAAEoB,QACd,IAAQnB,EAASD,EAAEoB,OAAXnB,KAER,OADAiB,QAAQC,IAAIlB,GACJA,GACN,IAAK,OACHY,GAAQ,SAACQ,GAAD,OAAWA,EAAQ,KAC3B,MACF,IAAK,UACHP,GAAW,SAACO,GAAD,OAAWA,EAAQ,KAC9B,MACF,IAAK,MACHN,GAAO,SAACM,GAAD,OAAWA,EAAQ,KAC1B,MACF,QACE,SAgBA7B,QAAS8B,OAAOC,KAAK,CAAEpB,OAAMC,UAASC,UAGvCW,IACC,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,IACPT,mBAhBCiB,OAAOC,KAAKC,MAAOvB,EAAOa,IAAwB,QAmBrD,cAAC,EAAD,CAAcP,QAAQ,yBCnD9BkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFmB,SAASC,eAAe,W","file":"static/js/main.037c27a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport Section from \"./Section\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <Section title=\"Please leave feedback\">\r\n    <div>\r\n      {options.map((option) => (\r\n        <button\r\n          style={{\r\n            marginRight: \"5px\",\r\n          }}\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            onLeaveFeedback(e);\r\n          }}\r\n          name={option}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </Section>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Section from \"./Section\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <Section title=\"Statistics\">\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage} %</p>\r\n  </Section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Container = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport FeedbackOptions from \"./components/FeedbackOption\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\nimport Container from \"./components/Container\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const varietyOfFeedback = (e) => {\n    console.log(e);\n    console.log(e.target);\n    const { name } = e.target;\n    console.log(name);\n    switch (name) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Number(Math.round((good / countTotalFeedback()) * 100));\n  };\n\n  return (\n    <Container>\n      <FeedbackOptions\n        onLeaveFeedback={varietyOfFeedback}\n        options={Object.keys({ good, neutral, bad })}\n      />\n\n      {countTotalFeedback() ? (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}